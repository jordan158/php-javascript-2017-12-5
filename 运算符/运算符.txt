
------------------------------------------------------------------------------------------

js运算符

+，-，*，/
%(取模 就是计算两个数的余数，通常用于判断两个数是否整除，主要用于整数型)

例子：编写一个程序，判断两个数是否能够整除
 <script language="javascript">
var a=90;
var b=8;
if(a%b==0){
window.alert("能整除");
}else{
window.alert("不能整除");
}
</script>

•	++， 运算符
a++   -->  a=a+1
       b--   =  b=b-1
       ++a   表示先把自己加1再赋值
       --a    表示先把自己减1再赋值
	   
b=++a <==> {a=a+1; b=a;}
b=a++ <==> {b=a;a=a+1;}

例子：
var a=56;
var b=++a;       
window.alert(b);         b=57
window.alert(a);         a=57
•	--运算符
var a=56;
var b=--a;         
window.alert(b);             b=55
window.alert(a);             a=55

算术运算符

var a=56;var b=90
a-=34;b%=a;(a=a-34;b=b%a)
window.alert(b);//b等于2
window.alert(a);//a等于22

----------------------------------------------------------------
关系运算符

1.==等于
2.>大于
3.<小于
4.>大于等于
5.<==小于等于
6.!=不等于

----------------------------------------------------------

  逻辑运算符
 用于判断逻辑关系的运算符
 
 1.&&与
 
 If（逻辑表达式1&&逻辑表达式2）{}
如果 逻辑表达式1为true 则JS引擎会继续执行逻辑表达式2
如果 逻辑表达式1为false则不会执行逻辑表达式2

 2、或||
 
  If（逻辑表达式1 || 逻辑表达式2）{}
如果 逻辑表达式1为true 则JS引擎不会继续执行逻辑表达式2
如果 逻辑表达式1为false则会执行逻辑表达式2

在js中||究竟返回什么
将返回第一个不为false那个值（对象亦可）,或者是返回最后一个值（如果全部都是flase的话）
返回的不一定是一个布尔值

 3.非 !
 （3）非！
特别说明：在逻辑运算中：0，””，false，null，undefined，NaN均表示false
                除了这些均表示真的。
var a=0;
if(!a){
window.alert("OK");//如果逻辑表达式为true,!(! 逻辑表达式)为false,反之则为true;
}
输出OK

------------------------------------------------------------------

js也有位运算符和移位运算，其规范和java一致

var a=4>>2;
//4 二进制00000100 移二位为00000001
window.alert(a);//1

var b=-4>>2;
window.alert(b);//-1

